{"version":3,"sources":["pages/HomePage.js","servises/tmdb-api.js","components/MoviesList/MoviesList.module.css","components/MoviesList/MoviesList.js"],"names":["HomePage","state","movies","a","getFetch","response","this","setState","data","results","title","Component","fetchMoviesCommon","url","config","axios","console","log","fetchMoviesTrending","fetchMovieOnSubmit","query","fetchMovieById","movieId","defaults","baseURL","params","api_key","module","exports","withRouter","location","className","s","MoviesList","map","id","name","release_date","item","to","pathname","from"],"mappings":"mPAMMA,E,4MACJC,MAAQ,CACNC,OAAQ,I,8FAGV,4BAAAC,EAAA,sEACyBC,MADzB,OACQC,EADR,OAEEC,KAAKC,SAAS,CAAEL,OAAQG,EAASG,KAAKC,UAFxC,gD,0EAKA,WAAU,IACAP,EAAWI,KAAKL,MAAhBC,OAER,OACE,cAAC,IAAD,CAAWQ,MAAO,iBAAlB,SACE,cAAC,IAAD,CAAYR,OAAQA,U,GAfLS,aAqBRX,a,6LCtBAY,I,2EAAf,4CAAAT,EAAA,6DAAiCU,EAAjC,+BAAuC,GAAIC,EAA3C,+BAAoD,GAApD,kBAG2BC,IAAMF,EAAKC,GAHtC,cAGUT,EAHV,yBAKWA,GALX,gCAOIW,QAAQC,IAAR,MAPJ,0D,sBAWO,SAASC,IACd,OAAON,EAAkB,uBAGpB,SAASO,EAAmBC,GACjC,OAAOR,EAAkB,sBAAD,OAAuBQ,IAG1C,SAASC,EAAeC,GAC7B,OAAOV,EAAkB,SAAD,OAAUU,IAvBpCP,IAAMQ,SAASC,QAAU,+BACzBT,IAAMQ,SAASE,OAAS,CAAEC,QAAS,qC,mBCFnCC,EAAOC,QAAU,CAAC,WAAa,+BAA+B,KAAO,2B,iHCwBtDC,eApBI,YAAiC,IAArB3B,EAAoB,EAApBA,OAAQ4B,EAAY,EAAZA,SACrC,OACE,mCACG5B,GACC,oBAAI6B,UAAWC,IAAEC,WAAjB,SACG/B,EAAOgC,KAAI,gBAAGC,EAAH,EAAGA,GAAIzB,EAAP,EAAOA,MAAO0B,EAAd,EAAcA,KAAd,EAAoBC,aAApB,OACV,oBAAaN,UAAWC,IAAEM,KAA1B,SACE,cAAC,IAAD,CACEC,GAAI,CAAEC,SAAS,WAAD,OAAaL,GAAMlC,MAAO,CAAEwC,KAAMX,IADlD,SAEGpB,GAAgB0B,KAHZD","file":"static/js/6.348e5e25.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport * as getFetch from '../servises/tmdb-api';\r\n\r\nimport { Container } from '../components/Container';\r\nimport { MoviesList } from '../components/MoviesList';\r\n\r\nclass HomePage extends Component {\r\n  state = {\r\n    movies: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const response = await getFetch.fetchMoviesTrending();\r\n    this.setState({ movies: response.data.results });\r\n  }\r\n\r\n  render() {\r\n    const { movies } = this.state;\r\n\r\n    return (\r\n      <Container title={'Trending today'}>\r\n        <MoviesList movies={movies} />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\r\naxios.defaults.params = { api_key: '91aea6be0a2d3e1853dbbebc31e6363d' };\r\n\r\nasync function fetchMoviesCommon(url = '', config = {}) {\r\n  // console.dir(axios);\r\n  try {\r\n    const response = await axios(url, config);\r\n    // console.log(response.data.results);\r\n    return response;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport function fetchMoviesTrending() {\r\n  return fetchMoviesCommon('trending/movie/week');\r\n}\r\n\r\nexport function fetchMovieOnSubmit(query) {\r\n  return fetchMoviesCommon(`search/movie?query=${query}`);\r\n}\r\n\r\nexport function fetchMovieById(movieId) {\r\n  return fetchMoviesCommon(`movie/${movieId}`);\r\n}\r\n\r\n// const fetchSearchMovies = ({ searchQuery = '' }) => {\r\n//   return axios\r\n//     .get(`${baseURL}/search/movie?query=${searchQuery}&api_key=${apiKey}`)\r\n//     .then(({ data }) => data)\r\n//     .catch(error => error);\r\n// };\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MoviesList\":\"MoviesList_MoviesList__JDaPq\",\"item\":\"MoviesList_item__3O-hL\"};","import React from 'react';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport s from './MoviesList.module.css';\r\n// import s from './TrendingList.module.css'\r\n\r\nconst MoviesList = function ({ movies, location }) {\r\n  return (\r\n    <>\r\n      {movies && (\r\n        <ul className={s.MoviesList}>\r\n          {movies.map(({ id, title, name, release_date }) => (\r\n            <li key={id} className={s.item}>\r\n              <NavLink\r\n                to={{ pathname: `/movies/${id}`, state: { from: location } }}>\r\n                {title ? title : name}\r\n              </NavLink>\r\n              {/* <span> release at {release_date} </span> */}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(MoviesList);\r\n"],"sourceRoot":""}