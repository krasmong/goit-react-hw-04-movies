{"version":3,"sources":["components/MovieInfo/MainInfo/MovieMainInfo.module.css","components/MovieInfo/OtherInfo/Cast.module.css","default.jpg","path.js","components/MovieInfo/MainInfo/MovieMainInfo.js","components/MovieInfo/OtherInfo/Cast.js","components/MovieInfo/OtherInfo/Reviews.js","components/MovieInfo/OtherInfo/MovieOtherInfo.js","pages/MovieDetailsPage.js","components/MovieInfo/OtherInfo/MovieOtherInfo.module.css","servises/tmdb-api.js"],"names":["module","exports","MovieMainInfo","movie","defaultImg","title","poster_path","vote_average","overview","genres","release_date","userScore","imgPath","pathLink","imgUrl","releaseYear","slice","className","s","movieMainInfo","src","alt","width","movieDesc","text","length","map","genre","name","join","Cast","state","info","a","movieId","this","props","getFetch","response","setState","data","console","log","cast","castList","elem","item","profile_path","itemImage","original_name","character","id","Component","defaultProps","Reviews","results","author","content","MovieOtherInfo","match","location","url","movieOtherInfo","list","to","pathname","from","path","render","params","withRouter","MovieDetalisPage","handleGoback","history","push","routes","filter","route","type","onClick","fetchMoviesCommon","config","axios","fetchMoviesTrending","fetchMovieOnSubmit","query","fetchMovieById","fetchMovieCastInfo","fetchMovieReviewsInfo","defaults","baseURL","api_key"],"mappings":"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","file":"static/js/6.21bafec1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"movieMainInfo\":\"MovieMainInfo_movieMainInfo__2IA2q\",\"movieDesc\":\"MovieMainInfo_movieDesc__3t1_9\",\"MovieDesc\":\"MovieMainInfo_MovieDesc__1tfQY\",\"button-back\":\"MovieMainInfo_button-back__2wNOT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"castList\":\"Cast_castList__308ni\",\"item\":\"Cast_item__1qu28\",\"itemImage\":\"Cast_itemImage__oucVb\",\"itenImage\":\"Cast_itenImage__lNWfX\"};","export default __webpack_public_path__ + \"static/media/default.2e01288c.jpg\";","export default {\r\n  imagePoster: 'http://image.tmdb.org/t/p/w185',\r\n  imageProfile: 'http://image.tmdb.org/t/p/w45',\r\n};\r\n","import React from 'react';\r\nimport pathLink from '../../../path';\r\nimport s from './MovieMainInfo.module.css';\r\n\r\nconst MovieMainInfo = ({ movie, defaultImg }) => {\r\n  const {\r\n    title,\r\n    poster_path,\r\n    vote_average,\r\n    overview,\r\n    genres,\r\n    release_date,\r\n  } = movie;\r\n\r\n  const userScore = vote_average * 10;\r\n\r\n  const imgPath = `${pathLink.imagePoster}${poster_path}`;\r\n  const imgUrl = poster_path ? imgPath : defaultImg;\r\n  const releaseYear = release_date.slice(0, 4);\r\n\r\n  return (\r\n    <>\r\n      <div className={s.movieMainInfo}>\r\n        <div className=\"MovieImg\">\r\n          <img className=\"poster\" src={imgUrl} alt={title} width={185} />\r\n        </div>\r\n\r\n        <div className={s.movieDesc}>\r\n          <h2 className=\"title\">\r\n            {title}({releaseYear})\r\n          </h2>\r\n          <p className={s.text}>User score: {userScore} %</p>\r\n          <h3>Overview</h3>\r\n          {overview ? <p>{overview}</p> : <p>No data</p>}\r\n\r\n          <h3>Genres</h3>\r\n          {genres && genres.length > 0 ? (\r\n            <p className={s.genres}>\r\n              {genres.map(genre => genre.name).join(', ')}\r\n            </p>\r\n          ) : (\r\n            <p>No data</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieMainInfo;\r\n","import React, { Component } from 'react';\r\nimport * as getFetch from '../../../servises/tmdb-api';\r\nimport pathLink from '../../../path';\r\nimport s from '../OtherInfo/Cast.module.css';\r\nimport defaultImg from '../../../default.jpg';\r\n\r\nclass Cast extends Component {\r\n  static defaultProps = {\r\n    defaultImg: defaultImg,\r\n  };\r\n  state = {\r\n    info: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { movieId } = this.props;\r\n\r\n    const response = await getFetch.fetchMovieCastInfo(movieId);\r\n    if (response) {\r\n      this.setState({ info: response.data });\r\n    }\r\n    console.log(response);\r\n    console.log('cast');\r\n  }\r\n\r\n  render() {\r\n    const { info } = this.state;\r\n\r\n    if (info === null) {\r\n      return <></>;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {info.cast.length > 0 ? (\r\n          <ul className={s.castList}>\r\n            {info.cast.map(elem => (\r\n              <li key={elem.id} className={s.item}>\r\n                {elem.profile_path ? (\r\n                  <img\r\n                    className={s.itemImage}\r\n                    src={`${pathLink.imageProfile}${elem.profile_path}`}\r\n                    alt={elem.original_name}\r\n                    width=\"92\"\r\n                  />\r\n                ) : (\r\n                  <img src={this.props.defaultImg} alt=\"Not found\" width=\"45\" />\r\n                )}\r\n                {elem.original_name}\r\n                <p>Character: {elem.character}</p>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>No info</p>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cast;\r\n","import { render } from '@testing-library/react';\r\nimport { Component } from 'react';\r\nimport * as getFetch from '../../../servises/tmdb-api';\r\n\r\nclass Reviews extends Component {\r\n  state = {\r\n    info: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { movieId } = this.props;\r\n    const response = await getFetch.fetchMovieReviewsInfo(movieId);\r\n    this.setState({ info: response.data.results });\r\n  }\r\n\r\n  render() {\r\n    const { info } = this.state;\r\n\r\n    if (info === null) {\r\n      return <></>;\r\n    }\r\n    return (\r\n      <>\r\n        {info.length > 0 ? (\r\n          <ul>\r\n            {info.map(({ id, author, content }) => (\r\n              <li key={id}>\r\n                <h4>{author}</h4>\r\n                <p>{content}</p>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p> We don't have any reviews for this movie </p>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Reviews;\r\n","import React, { Component, Suspense } from 'react';\r\nimport { Link, Route, Switch, withRouter } from 'react-router-dom';\r\nimport Cast from './Cast';\r\nimport Reviews from './Reviews';\r\nimport s from './MovieOtherInfo.module.css';\r\n\r\nclass MovieOtherInfo extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    const { match, location } = this.props;\r\n    console.log(match.url);\r\n\r\n    return (\r\n      <div className={s.movieOtherInfo}>\r\n        <h3 className={s.title}> Additional information</h3>\r\n        <ul className={s.list}>\r\n          <li className={s.item}>\r\n            <Link\r\n              to={{\r\n                pathname: `${match.url}/cast`,\r\n                state: { from: location },\r\n              }}>\r\n              Cast\r\n            </Link>\r\n          </li>\r\n          <li className={s.item}>\r\n            <Link\r\n              to={{\r\n                pathname: `${match.url}/reviews`,\r\n                state: { from: location },\r\n              }}>\r\n              Reviews\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <Route\r\n          path={`${match.url}/cast`}\r\n          // component={Cast}\r\n          render={props => <Cast {...props} movieId={match.params.movieId} />}\r\n        />\r\n        <Route\r\n          path={`${match.url}/reviews`}\r\n          render={props => (\r\n            <Reviews {...props} movieId={match.params.movieId} />\r\n          )}\r\n        />\r\n        {/* <Suspense fallback={<h2>Loading...</h2>}>\r\n          <Switch></Switch>\r\n        </Suspense> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(MovieOtherInfo);\r\n","import { Component } from 'react';\r\nimport * as getFetch from '../servises/tmdb-api';\r\nimport defaultImg from '../../src/default.jpg';\r\nimport routes from '../routes';\r\n\r\nimport { MovieMainInfo, MovieOtherInfo } from '../components/MovieInfo';\r\n// import MovieOtherInfo from '../components/MovieInfo/OtherInfo/MovieOtherInfo';\r\n\r\nclass MovieDetalisPage extends Component {\r\n  state = {\r\n    movie: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { movieId } = this.props.match.params;\r\n    const response = await getFetch.fetchMovieById(movieId);\r\n    if (response) {\r\n      this.setState({ movie: response.data });\r\n    }\r\n    console.log(response);\r\n  }\r\n\r\n  handleGoback = () => {\r\n    const { location, history } = this.props;\r\n\r\n    history.push(\r\n      location?.state?.from || routes.filter(route => route.path === '/'),\r\n    );\r\n  };\r\n\r\n  // handleGoback = () => {\r\n  //   const { location, history } = this.props;\r\n  //   if (location.state && location.state.from) {\r\n  //     return history.push(location.state.from);\r\n  //   }\r\n  //   history.push(routes.home);\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button type=\"button\" onClick={this.handleGoback}>\r\n          &#8592; Go back\r\n        </button>\r\n        {this.state.movie !== null && (\r\n          <>\r\n            <MovieMainInfo movie={this.state.movie} defaultImg={defaultImg} />\r\n            <MovieOtherInfo />\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieDetalisPage;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"MovieOtherInfo_title__-vbf3\",\"list\":\"MovieOtherInfo_list__1g_Nd\",\"item\":\"MovieOtherInfo_item__3kAI6\"};","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\r\naxios.defaults.params = { api_key: '91aea6be0a2d3e1853dbbebc31e6363d' };\r\n\r\nasync function fetchMoviesCommon(url = '', config = {}) {\r\n  // console.dir(axios);\r\n  try {\r\n    const response = await axios(url, config);\r\n    // console.log(response.data.results);\r\n    return response;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport function fetchMoviesTrending() {\r\n  return fetchMoviesCommon('trending/movie/week');\r\n}\r\n\r\nexport function fetchMovieOnSubmit(query) {\r\n  return fetchMoviesCommon(`search/movie?query=${query}`);\r\n}\r\n\r\nexport function fetchMovieById(movieId) {\r\n  return fetchMoviesCommon(`movie/${movieId}`);\r\n}\r\n\r\nexport function fetchMovieCastInfo(movieId) {\r\n  return fetchMoviesCommon(`movie/${movieId}/credits`);\r\n}\r\n\r\nexport function fetchMovieReviewsInfo(movieId) {\r\n  return fetchMoviesCommon(`movie/${movieId}/reviews`);\r\n}\r\n\r\n// const fetchSearchMovies = ({ searchQuery = '' }) => {\r\n//   return axios\r\n//     .get(`${baseURL}/search/movie?query=${searchQuery}&api_key=${apiKey}`)\r\n//     .then(({ data }) => data)\r\n//     .catch(error => error);\r\n// };\r\n"],"sourceRoot":""}