{"version":3,"sources":["components/MoviesList/MoviesList.js","components/Form/Form.module.css","components/Form/Form.js","pages/MoviesPage.js","servises/tmdb-api.js","components/MoviesList/MoviesList.module.css"],"names":["withRouter","movies","location","className","s","MoviesList","map","id","title","name","release_date","item","to","pathname","state","from","module","exports","Form","query","handleChange","e","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","toast","warn","Searchbar","form","this","type","formButton","style","marginRight","formInput","autoComplete","autoFocus","placeholder","onChange","Component","MoviesPage","error","handleSearch","console","log","history","match","push","url","getFetch","then","r","data","results","search","parsed","queryString","parse","response","prevProps","prevState","fetchMovies","Container","message","fetchMoviesCommon","a","config","axios","fetchMoviesTrending","fetchMovieOnSubmit","fetchMovieById","movieId","fetchMovieCastInfo","fetchMovieReviewsInfo","defaults","baseURL","params","api_key"],"mappings":"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","file":"static/js/7.793a4020.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport s from './MoviesList.module.css';\r\n// import s from './TrendingList.module.css'\r\n\r\nconst MoviesList = function ({ movies, location }) {\r\n  return (\r\n    <>\r\n      {movies && (\r\n        <ul className={s.MoviesList}>\r\n          {movies.map(({ id, title, name, release_date }) => (\r\n            <li key={id} className={s.item}>\r\n              <NavLink\r\n                to={{ pathname: `/movies/${id}`, state: { from: location } }}>\r\n                {title ? title : name}\r\n              </NavLink>\r\n              {/* <span> release at {release_date} </span> */}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(MoviesList);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Form_Searchbar__1vcat\",\"form\":\"Form_form__3mgkE\",\"formButton\":\"Form_formButton__2bDyr\",\"formInput\":\"Form_formInput__2G-_8\"};","import React, { Component } from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport { BiSearchAlt } from 'react-icons/bi';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport s from './Form.module.css';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    query: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      query: e.currentTarget.value.toLowerCase(),\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (this.state.query.trim() === '') {\r\n      toast.warn('Заполните форму поиска');\r\n      return;\r\n    }\r\n\r\n    this.props.onSubmit(this.state.query);\r\n    this.setState({ query: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={s.Searchbar}>\r\n        <form className={s.form} onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className={s.formButton}>\r\n            <BiSearchAlt style={{ marginRight: 8 }} />\r\n          </button>\r\n\r\n          <input\r\n            className={s.formInput}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search movies\"\r\n            value={this.state.query}\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// Form.propTypes = {\r\n//   onSubmit: PropTypes.func.isRequired,\r\n// };\r\n\r\nexport default Form;\r\n","import { Component } from 'react';\r\nimport queryString from 'query-string';\r\n\r\nimport * as getFetch from '../servises/tmdb-api';\r\n\r\nimport { Container } from '../components/Container';\r\n\r\nimport { Form } from '../components/Form';\r\nimport { MoviesList } from '../components/MoviesList';\r\n\r\nclass MoviesPage extends Component {\r\n  state = {\r\n    query: '',\r\n    movies: null,\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { search, pathname } = this.props.location;\r\n    if (search && pathname) {\r\n      const parsed = queryString.parse(search);\r\n      const response = getFetch.fetchMovieOnSubmit(parsed.query);\r\n      console.log(response);\r\n      response.then(r => this.setState({ movies: r.data.results }));\r\n    }\r\n    console.log('query: ', this.state.query);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.query !== this.state.query) {\r\n      this.fetchMovies();\r\n    }\r\n  }\r\n\r\n  handleSearch = query => {\r\n    console.log('zapros: ', query);\r\n    console.log('this.state.query: ', this.state.query);\r\n\r\n    const { history, match } = this.props;\r\n\r\n    history.push(`${match.url}?query=${query}`);\r\n    const response = getFetch.fetchMovieOnSubmit(query);\r\n    response.then(r => this.setState({ movies: r.data.results }));\r\n  };\r\n\r\n  // async fetchMovies() {\r\n  //   const { query, error } = this.state;\r\n  //   const options = { query, error };\r\n\r\n  //   if (!query) {\r\n  //     return;\r\n  //   }\r\n  //   const response = await getFetch\r\n  //     .fetchMovieOnSubmit(options)\r\n  //     .then(({ results }) => {\r\n  //       console.log(results);\r\n\r\n  //       if (results.length === 0) {\r\n  //         throw new Error('No matches were found! Try again!');\r\n  //       }\r\n\r\n  //       this.setState({\r\n  //         movies: [...results],\r\n  //       });\r\n  //     })\r\n  //     .catch(error => this.setState({ error }));\r\n  // }\r\n\r\n  render() {\r\n    const { error } = this.state;\r\n    return (\r\n      <>\r\n        <Form onSubmit={this.handleSearch} />\r\n        <Container title={'MoviesList'}>\r\n          <MoviesList movies={this.state.movies} />\r\n          {error && <h3>{error.message}</h3>}\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// class MoviesPage extends Component {\r\n//   state = {\r\n//     movies: null,\r\n//   };\r\n\r\n//   componentDidMount() {\r\n//     const { search } = this.props.location;\r\n//     if (search) {\r\n//       const parsed = queryString.parse(search);\r\n//       const response = getFetch.fetchMovieOnSubmit(parsed.query);\r\n//       console.log(response);\r\n//       response.then(r => this.setState({ movies: r.data.results }));\r\n//     }\r\n//   }\r\n\r\n//   handleSearch = query => {\r\n//     const { history, match } = this.props;\r\n//     history.push(`${match.url}?query=${query}`);\r\n//     const response = getFetch.fetchMovieOnSubmit(query);\r\n//     response.then(r => this.setState({ movies: r.data.results }));\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <>\r\n//         <h2> MoviesPage </h2>\r\n//         <Form onSubmit={this.handleSearch} />\r\n//         <MoviesList movies={this.state.movies} />\r\n//       </>\r\n//     );\r\n//   }\r\n// }\r\n\r\nexport default MoviesPage;\r\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\r\naxios.defaults.params = { api_key: '91aea6be0a2d3e1853dbbebc31e6363d' };\r\n\r\nasync function fetchMoviesCommon(url = '', config = {}) {\r\n  // console.dir(axios);\r\n  try {\r\n    const response = await axios(url, config);\r\n    // console.log(response.data.results);\r\n    return response;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport function fetchMoviesTrending() {\r\n  return fetchMoviesCommon('trending/movie/week');\r\n}\r\n\r\nexport function fetchMovieOnSubmit(query) {\r\n  return fetchMoviesCommon(`search/movie?query=${query}`);\r\n}\r\n\r\nexport function fetchMovieById(movieId) {\r\n  return fetchMoviesCommon(`movie/${movieId}`);\r\n}\r\n\r\nexport function fetchMovieCastInfo(movieId) {\r\n  return fetchMoviesCommon(`movie/${movieId}/credits`);\r\n}\r\n\r\nexport function fetchMovieReviewsInfo(movieId) {\r\n  return fetchMoviesCommon(`movie/${movieId}/reviews`);\r\n}\r\n\r\n// const fetchSearchMovies = ({ searchQuery = '' }) => {\r\n//   return axios\r\n//     .get(`${baseURL}/search/movie?query=${searchQuery}&api_key=${apiKey}`)\r\n//     .then(({ data }) => data)\r\n//     .catch(error => error);\r\n// };\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MoviesList\":\"MoviesList_MoviesList__JDaPq\",\"item\":\"MoviesList_item__3O-hL\"};"],"sourceRoot":""}