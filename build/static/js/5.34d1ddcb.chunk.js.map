{"version":3,"sources":["servises/tmdb-api.js","components/MoviesList/MoviesList.js","components/Form/Form.module.css","components/Form/Form.js","pages/MoviesPage.js"],"names":["fetchMoviesCommon","a","url","config","axios","response","console","log","fetchMoviesTrending","fetchMovieOnSubmit","query","defaults","baseURL","params","api_key","withRouter","movies","location","map","id","title","name","release_date","to","pathname","state","from","module","exports","Form","handleChange","e","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","toast","warn","className","s","Searchbar","form","this","type","formButton","style","marginRight","formInput","autoComplete","autoFocus","placeholder","onChange","Component","MoviesPage","error","handleSearch","history","push","search","queryString","parse","prevProps","prevState","serchQuery","fetchMovies","options","getFetch","then","results","length","Error","catch","MoviesList","message"],"mappings":"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","file":"static/js/5.34d1ddcb.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\r\naxios.defaults.params = { api_key: '91aea6be0a2d3e1853dbbebc31e6363d' };\r\n\r\nasync function fetchMoviesCommon(url = '', config = {}) {\r\n  // console.dir(axios);\r\n  try {\r\n    const response = await axios(url, config);\r\n    // console.log(response.data.results);\r\n    return response;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport function fetchMoviesTrending() {\r\n  return fetchMoviesCommon('trending/movie/week');\r\n}\r\n\r\nexport function fetchMovieOnSubmit(query) {\r\n  return fetchMoviesCommon(`search/movie?query=${query}`);\r\n}\r\n\r\n// const fetchSearchMovies = ({ searchQuery = '' }) => {\r\n//   return axios\r\n//     .get(`${baseURL}/search/movie?query=${searchQuery}&api_key=${apiKey}`)\r\n//     .then(({ data }) => data)\r\n//     .catch(error => error);\r\n// };\r\n","import React from 'react';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\n\r\n// import s from './TrendingList.module.css'\r\n\r\nconst MoviesList = function ({ movies, location }) {\r\n  return (\r\n    <>\r\n      {movies && (\r\n        <ul>\r\n          {movies.map(({ id, title, name, release_date }) => (\r\n            <li key={id}>\r\n              <NavLink\r\n                to={{ pathname: `/movies/${id}`, state: { from: location } }}>\r\n                {title ? title : name}\r\n              </NavLink>\r\n              {/* <span> release at {release_date} </span> */}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(MoviesList);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Form_Searchbar__1vcat\",\"form\":\"Form_form__3mgkE\",\"formButton\":\"Form_formButton__2bDyr\",\"formInput\":\"Form_formInput__2G-_8\"};","import React, { Component } from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport { BiSearchAlt } from 'react-icons/bi';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport s from './Form.module.css';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    query: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      query: e.currentTarget.value.toLowerCase(),\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (this.state.query.trim() === '') {\r\n      toast.warn('Заполните форму поиска');\r\n      return;\r\n    }\r\n\r\n    this.props.onSubmit(this.state.query);\r\n    this.setState({ query: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={s.Searchbar}>\r\n        <form className={s.form} onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className={s.formButton}>\r\n            <BiSearchAlt style={{ marginRight: 8 }} />\r\n          </button>\r\n\r\n          <input\r\n            className={s.formInput}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search movies\"\r\n            value={this.state.query}\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// Form.propTypes = {\r\n//   onSubmit: PropTypes.func.isRequired,\r\n// };\r\n\r\nexport default Form;\r\n","import { Component } from 'react';\r\nimport queryString from 'query-string';\r\n\r\nimport * as getFetch from '../servises/tmdb-api';\r\n\r\nimport { Form } from '../components/Form';\r\nimport { MoviesList } from '../components/MoviesList';\r\n\r\nclass MoviesPage extends Component {\r\n  state = {\r\n    query: '',\r\n    movies: null,\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { search, pathname } = this.props.location;\r\n    if ((search, pathname)) {\r\n      this.setState({\r\n        query: queryString.parse(search).query,\r\n      });\r\n    }\r\n    console.log('query: ', this.state.query);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.serchQuery !== this.state.serchQuery) {\r\n      this.fetchMovies();\r\n    }\r\n  }\r\n\r\n  handleSearch = query => {\r\n    console.log('zapros: ', query);\r\n\r\n    const { history, location } = this.props;\r\n\r\n    this.setState({\r\n      query: query,\r\n      movies: [],\r\n      error: null,\r\n    });\r\n\r\n    history.push({\r\n      ...location,\r\n      search: `query=${query}`,\r\n    });\r\n  };\r\n\r\n  async fetchMovies() {\r\n    const { query, error } = this.state;\r\n    const options = { query, error };\r\n\r\n    if (!query) {\r\n      return;\r\n    }\r\n    const response = await getFetch\r\n      .fetchMovieOnSubmit(options)\r\n      .then(({ results }) => {\r\n        console.log(results);\r\n\r\n        if (results.length === 0) {\r\n          throw new Error('No matches were found! Try again!');\r\n        }\r\n\r\n        this.setState({\r\n          movies: [...results],\r\n        });\r\n      })\r\n      .catch(error => this.setState({ error }));\r\n  }\r\n\r\n  render() {\r\n    const { error } = this.state;\r\n    return (\r\n      <>\r\n        <Form onSubmit={this.handleSearch} />\r\n        <MoviesList movies={this.state.movies} />\r\n        {error && <h3>{error.message}</h3>}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// class MoviesPage extends Component {\r\n//   state = {\r\n//     movies: null,\r\n//   };\r\n\r\n//   componentDidMount() {\r\n//     const { search } = this.props.location;\r\n//     if (search) {\r\n//       const parsed = queryString.parse(search);\r\n//       const response = getFetch.fetchMovieOnSubmit(parsed.query);\r\n//       console.log(response);\r\n//       response.then(r => this.setState({ movies: r.data.results }));\r\n//     }\r\n//   }\r\n\r\n//   handleSearch = query => {\r\n//     const { history, match } = this.props;\r\n//     history.push(`${match.url}?query=${query}`);\r\n//     const response = getFetch.fetchMovieOnSubmit(query);\r\n//     response.then(r => this.setState({ movies: r.data.results }));\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <>\r\n//         <h2> MoviesPage </h2>\r\n//         <Form onSubmit={this.handleSearch} />\r\n//         <MoviesList movies={this.state.movies} />\r\n//       </>\r\n//     );\r\n//   }\r\n// }\r\n\r\nexport default MoviesPage;\r\n"],"sourceRoot":""}